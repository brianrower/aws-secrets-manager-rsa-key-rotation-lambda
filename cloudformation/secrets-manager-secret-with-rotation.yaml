---
AWSTemplateFormatVersion: '2010-09-09'
Description: A template for deploying the RSA key rotation to be used by the AWS Secrets Manager
Parameters:
  LambdaSourceBucket:
    Type: String
  LambdaSourceKey:
    Type: String
Resources:
  LambdaIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: RSAKeyRotationPolicy
      PolicyDocument:
        Version: '2012-10-17'
        Statement: [
          {
              "Effect": "Allow",
              "Action": [
                  "secretsmanager:DescribeSecret",
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:PutSecretValue",
                  "secretsmanager:UpdateSecretVersionStage"
              ],
              "Resource": "*",
              "Condition": {
                  "StringEquals": {
                      "secretsmanager:resource/AllowRotationLambdaArn": !GetAtt KeyRotationLambda.Arn
                  }
              }
          },
          {
            "Action": "logs:*",
            "Resource": "arn:aws:logs:*:*:*",
            "Effect": "Allow"
          }
        ]
      Roles:
        - !Ref LambdaRole

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - secretsmanager.amazonaws.com

  LambdaSecretsManagerPolicy:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt KeyRotationLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: secretsmanager.amazonaws.com

  LambdaCustomCFNPolicy:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt KeyRotationLambda.Arn
      Action: 'lambda:InvokeFunction'
      Principal: !ImportValue cfn-secret-provider-RoleARN

  KeyRotationLambda:
    Type: AWS::Lambda::Function
    DependsOn:
      - LambdaRole
    Properties:
      Description: CloudFormation Custom:Secret implementation
      Code:
        S3Bucket: !Ref LambdaSourceBucket
        S3Key: !Ref LambdaSourceKey
      Handler: main.lambda_handler
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt 'LambdaRole.Arn'
      Runtime: python3.6

  # Custom CFN Type - secrets manager secret
  SecretsManagerSecret:
    Type: Custom::SecretsManagerSecret
    Properties:
      Name: !Sub '${AWS::StackName}-demo-secret'
      LambdaARN: !GetAtt KeyRotationLambda.Arn
      Interval: 1
      ServiceToken: !ImportValue cfn-secret-provider-ARN
